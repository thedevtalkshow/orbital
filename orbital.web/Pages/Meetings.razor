@page "/meetings"
@using orbital.core
@using orbital.web.Services
@using orbital.web.Components

@inject IMeetingsService meetingsService
@inject NavigationManager Navigation
@inject IMeetingStateService meetingStateService

<h3>Meetings</h3>

<div class="add-meeting-section mb-4">
    <button class="btn btn-primary" @onclick="NavigateToAddMeeting">
        Add New Meeting
    </button>
</div>

<div class="meeting-list">
    @if (meetings == null || meetings.Count == 0)
    {
        <p>No meetings available.</p>
    }
    else
    {
        foreach (var meeting in meetings)
        {
            <MeetingComponent Meeting="meeting" OnEditClicked="NavigateToEditMeeting" />
        }
    }
</div>

@code {
    private List<Meeting> meetings = new List<Meeting>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadMeetings();
        }
        catch (Exception)
        {
            // logger.LogError($"Meetings page error: {ex.Message}");
            throw;
        }
    }

    private async Task LoadMeetings()
    {
        meetings = await meetingsService.GetMeetingsAsync();
    }

    private void NavigateToAddMeeting()
    {
        Navigation.NavigateTo("/meetings/edit");
    }

    private void NavigateToEditMeeting(Meeting meeting)
    {
        meetingStateService.CurrentEditingMeeting = meeting;
        Navigation.NavigateTo("/meetings/edit");
    }
}
